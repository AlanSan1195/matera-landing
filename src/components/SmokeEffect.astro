<div id="smoke-bkg" class="fixed top-0  h-full w-full -z-10 opacity-45 "></div>

<script>
  //importamos la biobleoteca de Three.js
  // hicimos este efecto en un proyecto con midudev junto con el y la comunidadad

  import * as THREE from "three";

  const $bkg = document.getElementById("smoke-bkg");

  let w = window.innerWidth;
  let h = window.innerHeight;

  //inicializar Three.js
  // 3 cosas basiscas:   Escena, Camara, Rednderizador

  //Escena
  const scene = new THREE.Scene();

  //Camara   el "h" es el frente y la "w" es los lados 1000 es la maxima para que mas ya no s eve esta muy lejos
  const camara = new THREE.PerspectiveCamera(75, w / h, 1, 1000);
  //activamos la profundidad deceada
  camara.position.z = 10;
  //a esta ecena le agregamos la camara
  scene.add(camara);




  //Renderizador ▶️   HAY DIFERENTES TIPOS PERO USAREMOS EL WEBGL
  const renderer = new THREE.WebGLRenderer();
  renderer.setSize(w, h);

  //color de fondo
  renderer.setClearColor(0x999999, 1);

  $bkg?.appendChild(renderer.domElement);


  // crear particulas de humo
  const smokeParticles = [];

  const loader = new THREE.TextureLoader();
  loader.crossOrigin = ""; //<--- en locallhost no pasa nada pero si desplegamos a un servidor puede ser necesario

  loader.load("/smoke.webp", (texture) => {
    // 1. Geometria
    //crear un plano geometrico de 300 x 300
    const smokeGeo = new THREE.PlaneGeometry(300, 300);

    //2. Material
    const smikeMaterial = new THREE.MeshLambertMaterial({
      map: texture,
      transparent: true,
    });

    // 3. Malla
    //creeamos las particulas y las posicionamos aleatoriamente
    const NUM_OF_PARTICLES = 300;

    for (let p = 0; p < NUM_OF_PARTICLES; p++) {
      const particle = new THREE.Mesh(smokeGeo, smikeMaterial);

      particle.position.set(
        Math.random() * 500 - 250,
        Math.random() * 500 - 250,
        // REDUCIR LAS PARTICULAS O AUMENTAR LA CANTIDAD 
        Math.random() * 1100 - 90
      );

      particle.rotation.z = Math.random() * 360;
      scene.add(particle);
      smokeParticles.push(particle);
      function animateSmoke(){
          requestAnimationFrame(animateSmoke);
          particle.rotation.z += 0.008;
           particle.position.y += 0.01;
           particle.position.x += 0.04;

      } 
      animateSmoke();
    }

    const smokeMesh = new THREE.Mesh(smokeGeo, smikeMaterial);
  });

  // RENDERIZAR LA CAMARA CUANDO SE CAMBIEN LOS PARAMAETRO DE LA LA PANTALLA 

  function reize (){
    w = window.innerWidth;
    h = window.innerHeight;
    camara.aspect = w / h;  
    camara.updateProjectionMatrix(); // funcion necesaria en THREE.JS  a la hjora de cambiar los aspectos de la ventana
    renderer.setSize(w, h);
  }

  // animamos la ecena
  function animate() {
    //ir llamando en cada frame a esta funciion que anima
    requestAnimationFrame(animate);
 
    //renderizamos la escena
    renderer.render(scene, camara);
  }
  //llamamos a la funcion animate para que se ejecute en cada frame

  animate();
  window.addEventListener("resize", reize);  // se va a disparar frecuentemente cuando se cambie el tamaño de la ventana
</script>
