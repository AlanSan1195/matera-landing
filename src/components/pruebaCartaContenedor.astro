---
import AsadosDeTira from "./AsadosDeTira.astro";
import RibEye from "./RibEye.astro";
import Filetes from "./Filetes.astro";
import Vacios from "./Vacios.astro";
import Entraas from "./Entrañas.astro";
import NavMD from "./NavMD.astro";
import Pulser from "./Pulser.astro";
import CardsComponent from "./CardsComponent.astro";

const { color, title, subtitle, id, showFooterContent } = Astro.props;
const empanadas = [
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Carne",
    description:
      "Empanada de carne cortada a cuchillo, contiene aceitunas, paprica, pasas de uva y un toque de huevo",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Carne picante",
    description:
      " Igual que nuestra empanada tradicional pero con un toque de picante",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Espinaca",
    description: "Con queso ricotta, parmesano, pimienta blanca y nuez moscada",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Queso y cebolla",
    description: " Cebolla morada, queso gouda y condimentos ",
    price: "$60",
  },

  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Humita",
    description:
      "Empanada con elote dulce, cebolla cambray, pimiento morrón, y queso gouda. Sabor suave y delicioso en cada bocado.",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Roquefort",
    description:
      "Rellena de queso roquefort y mozzarella, con un toque fresco de apio. Sabor intenso y equilibrado.",
    price: "$70",
  },

  {
    src: "/imagenes/carta/empanadas/siciliana.webp",
    name: "Siciliana",
    description:
      "Hecha con masa de pizza, rellena de jamón,quesos, pimiento rojo asado y aceituna verde, bañada en una rica salsa pomodoro.",
    price: "$140",
  },
];
const pizzas = [
  {
    src: "/imagenes/carta/pizzas/pizzaMargarita.webp",
    name: "Margarita",
    description: "Clásica combinación de mozzarella derretida, salsa de tomate y albahaca fresca",
    price: "$170",
  },
  {
    src: "/imagenes/carta/pizzas/pizzaHongos.webp",
    name: "Hongos",
    description: "Mozzarella, salsa de tomate y champiñones salteados enteros, llenos de sabor.",
    price: "$180",
  },
  {
    src: "/imagenes/carta/pizzas/4quesos.webp",
    name: "4 Quesos",
    description: "Mezcla de mozzarella, provolone, parmesano y roquefort, un clasico equilibrio.",
    price: "$170",
  },
  {
    src: "/imagenes/carta/pizzas/pizzaAnchoas.webp",
    name: "Tomate con anchoas",
    description: " Una opción sabrosa y sin queso. Rebanadas frescas de tomate, anchoas, aceitunas y ajo, rociadas con aceite de oliva. ",
    price: "$260",
  },
  {
    src: "/imagenes/carta/pizzas/pizzaBurrata.webp",
    name: "Jamón con burrata",
    description: "Base de salsa blanca, jamón hecho en casa, burrata fresca de San Miguel de Allende,y un toque de oliva y psitache hace de esta pizza una delicia.",
    price: "$280",
  },
  {
    src: "/imagenes/carta/pizzas/pizzaPancceta.webp",
    name: "Pancceta y provolone",
    description: "Salsa de tomate, mozzarella y provolone, coronada con panceta casera crujiente. Un deleite irresistible para los amantes de los sabores intensos.",
    price: "$60",
  },
];
const entradas = [
  {
    src: "/imagenes/carta/entradas/bocaditos.webp",
    name: "Bocaditos de espinaca",
    description:
      "Bocaditos crujientes de espinaca con queso parmesano, huevo batido y un toque de ajo.",
    price: "$185",
  },
  {
    src: "/imagenes/carta/entradas/pimientoAsado.webp",
    name: "Pimiento asado",
    description:
      "Pimiento rojo asado, pelado y servido frío con aceite de oliva y lajas de ajo. Perfecto para acompañar cortes de carne",
    price: "$130",
  },
  {
    src: "/imagenes/carta/entradas/esparragos.webp",
    name: "Espárragos al vapor",
    description:
      "Espárragos al vapor o a la parrilla, servidos con aceite de oliva y queso parmesano.",
    price: "$155",
  },

  {
    src: "/imagenes/carta/entradas/hongos.webp",
    name: "Hongos al ajillo",
    description:
      "Hongos al ajillo salteados con ajo, aceite de oliva, perejil y chile guajillo. Acompañados de crutones.",
    price: "$170",
  },
  {
    src: "/imagenes/carta/entradas/berenjenas.webp",
    name: "Berenjenas a la parmesana",
    description:
      "Berenjenas fritas con mozzarella, bañadas en salsa pomodoro y gratinadas con parmesano.",
    price: "$185",
  },
  {
    src: "/imagenes/carta/entradas/chorizoArgentino.webp",
    name: "Chorizo argentino",
    description:
      "Elaborado en casa, el embutido clásico de las parrilladas argentinas hecho con carne de res y cerdo.",
    price: "$110",
  },

  {
    src: "/imagenes/carta/entradas/chistorra.webp",
    name: "Chistorra",
    description:
      "Elaborada en casa, embutido estilool español, la carne es 100% de cerdo.",
    price: "$135",
  },
  {
    src: "/imagenes/carta/entradas/mollejaParrilla.webp",
    name: "Mollejas a la parrilla",
    description:
      "Mollejas de res a la parrilla, cocinadas con cuidado durante 20 minutos. Utilizamos la parte del corazón para un sabor excepcional.",
    price: "$310",
  },
  {
    src: "/imagenes/carta/entradas/mollejasVerdeo.webp",
    name: "Mollejas al verdeo",
    description:
      "Mollejas salteadas con cebolla cambray y chile serrano, ligeramente picantes. Se sirven con tortillas.",
    price: "$290",
  },
  {
    src: "/imagenes/carta/entradas/chinchulines.webp",
    name: "Chicnhulines a la parrilla",
    description: "Parrillados para conservar su textura suave y gran sabor.",
    price: "$210",
  },
  {
    src: "/imagenes/carta/entradas/malfatis.webp",
    name: "Malfatti de espinaca",
    description:
      "La pasta es hecha en casa, rellena de espinaca y queso ricotta, bañada en salsa de poro.",
    price: "$250",
  },
  {
    src: "/imagenes/carta/entradas/provoletaTomate.webp",
    name: "Provoleta Tomate",
    description:
      "Queso semi maduro de origen argentino, con tomate y mediol pimiento asado",
    price: "$220",
  },
  {
    src: "/imagenes/carta/entradas/provoletaSerrano.webp",
    name: "Provoleta Arugula",
    description:
      "Queso semi maduro de origen argentino, servida con jamos serrano y arugula",
    price: "$260",
  },
  {
    src: "/imagenes/carta/entradas/tartara.webp",
    name: "Tartara de Rib-Eye",
    description:
      "Carne de rib eye cortada a cuchillo, mezclada con anchoas y alcaparras.",
    price: "$250",
  },
  {
    src: "/imagenes/carta/entradas/carpaccioJamon.webp",
    name: "Carpaccio de jamón serrano",
    description:
      "Con un toque de aceite de oliva y vinagre balsámico, acompañado de albahaca y grana padano.",
    price: "$260",
  },
  {
    src: "/imagenes/carta/entradas/mejillones.webp",
    name: "Mejillones con chistorra",
    description:
      "Cocinados al vapor con chistorra y papas a la francesa, uno de los favoritos de la casa.",
    price: "$335",
  },
];
const ensaladas = [
  {
    src: "/imagenes/carta/ensaladas/ensaladaVerde.webp",
    name: "Ensalada Verde",
    description: "Ensalada fresca con una cuidada selección de vegetales y vinagreta especial de la casa.",
    price: "$170",
  },
  {
    src: "/imagenes/carta/ensaladas/tomateBurrata.webp",
    name: "Ensalada de tomate con burrata",
    description: "Mix de tomates, cebolla morada, crutones y burrata de San Miguel de Allende.",
    price: "$280",
  },
  {
    src: "/imagenes/carta/ensaladas/mikonos.webp",
    name: "Mykonos",
    description: "Fresca ensalada de tomate y queso feta, acompañada de una vinagreta casera y hierbas Frescas",
    price: "$180",
  },
  {
    src: "/imagenes/carta//ensaladas/corazones.webp",
    name: "Corazones de lechuga asados",
    description: "Bañados de un aderezo César casero, con un toque de queso Grana Padano. Una opción deliciosa.",
    price: "$210",
  },
  {
    src: "/imagenes/carta/ensaladas/arugula.webp",
    name: "Arúgula",
    description: "Fresca mezcla de arúgula aderezada con ajo y limón",
    price: "$155",
  },
  {
    src: "/imagenes/carta/ensaladas/arugulaCherry.webp",
    name: "Arúgula Cherry",
    description: " Fresca mezcla de arúgula con jitomates cherry, un toque de balsámico, aceite de oliva y láminas de queso Grana Padano.",
    price: "$170",
  },
  {
    src: "/imagenes/carta/ensaladas/palmitos.webp",
    name: "Palmito con alcahofa",
    description: "Suaves palmitos y corazones de alcachofas, acompañados de jitomate deshidratado, aceite de oliva, limón y un toque de chile quebrado.",
    price: "$250",
  },
];
const cocina = [
  {
    src: "/imagenes/carta/cocina/fetuBolognesa.webp",
    name: "Fettuccine Bolognesa",
    description: "Pasta Larga hecha en casa servida con salsa bolognesa que consiste de un ragú de carne",
    price: "$230",
  },
  {
    src: "/imagenes/carta/cocina/fetucciniHongos.webp",
    name: " Fettuccine con crema de hongos",
    description: "crema de hongos, sertas y portobelo con un toque de  ajo y vino blanco",
    price: "$195",
  },
  {
    src: "/imagenes/carta/cocina/fetuNegro.webp",
    name: "Fetucciine negro ",
    description: "Pasta elaborada con tinta de calamar se sirve con calamares salteado en su tinta vino blanco y crema",
    price: "$275",
  },
  {
    src: "/imagenes/carta/cocina/ravioles.webp",
    name: "Ravioles de espianaca al pomodoro",
    description: "Cuadritos de pasta, rellenas de espinacas y queso ricota.",
    price: "$230",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Farroto: vegetales y grana padano",
    description: "",
    price: "$210",
  },
  {
    src: "/imagenes/carta/cocina/sorrentinos.webp",
    name: "Sorrentinos de ricota con salsa rosa",
    description: "rellenos de queso ricota, parmesano, y  nuez troceada se sirve en salsa rosa es (Pomodoro y crema)",
    price: "$250",
  },
  {
    src: "/imagenes/carta/cocina/lasagna.webp",
    name: "Lasagna bolognesa",
    description: " Pasta en salsa boloñesa con espinacas y champiñón,  gratinada con queso, tambien contiene nuez",
    price: "$250",
  },
  {
    src: "/imagenes/carta/cocina/hamburguesaMatera.webp",
    name: "Hamburguesa al estilo de la matera",
    description: "preparar en Casa 130g de carne, molleja asada en la parrilla con queso provolone, jitomate, lechuga morada y aderezo de la casa.",
    price: "$250",
  },
  {
    src: "/imagenes/carta/cocina/milaPollo.webp",
    name: "Milanesa de pollo",
    description: "Pechuga de pollo empanizada y frita (200g) una guarnición a elegir ",
    price: "$220",
  },
  {
    src: "/imagenes/carta/cocina/milaRes.webp",
    name: "Milanesa de res",
    description: "Hecha con filete dle res empanizada y frita (250g) una guarnición a elegir ",
    price: "$320",
  },
];

const campoData = [
  {
    src: "/imagenes/carta/parrilla/campo/mapas/mapaFilete.webp",
    name: "Bife de lomo",
    description: "Cortes suabes totalmente magros ",
  },
  {
    src: "/imagenes/carta/parrilla/campo/mapas/mapaVacio.webp",
    name: "Vacio",
    description: "Corte jugoso, con marmoleo intermedio y textura firme",
  },
  {
    src: "/imagenes/carta/parrilla/campo/mapas/mapaEntrana.webp",
    name: "Entraña",
    description:
      " Corte con sabor intenso, se recomeinda con piel que le aporta una textura crocante",
  },
  {
    src: "/imagenes/carta/parrilla/campo/mapas/mapaAsado.webp",
    name: "Asado de tira",
    description:
      "Costillas cortadas transversalmente, abundante marmoleo y mucho sabor",
  },
  {
    src: "/imagenes/carta/parrilla/campo/mapas/mapaBife.webp",
    name: "Bife de chorizo",
    description: " Muy marmoleados y jugoso, nuestros cortes mas suabes.",
  },
  {
    src: "/imagenes/carta/parrilla/campo/tomahak.webp",
    name: "Easpeciales",
    description: "Nuestros cortes especiales son bajo desiponibilidad",
  },
];
const marData = [
  {
    src: "/imagenes/carta/parrilla/mar/pulpo.webp",
    name: "Pulpo con papas españolas",
    gramaje: "350gr / 12oz",
    price: "$490",
  },

  {
    src: "/imagenes/carta/parrilla/mar/salmon.webp",
    name: "Salmón",
    gramaje: "260gr / 9oz",
    price: "$360",
  },
  {
    src: "/imagenes/carta/parrilla/mar/camarones.webp",
    name: "Camarones con adobo de chiles",
    gramaje: "300gr / 12oz",
    price: "$320",
  },
  {
    src: "/imagenes/carta/parrilla/mar/robalo.webp",
    name: "Lonja de robalo",
    gramaje: "350gr / 12oz",
    price: "$550",
  },
  {
    src: "/imagenes/carta/parrilla/mar/calamar.webp",
    name: "Calamar patagónico provenzal",
    gramaje: "350gr / 12oz",
    price: "$450",
    boton: ".",
  },
];
const granjaData = [
  {
    src: "/imagenes/carta/parrilla/granja/patoLaqueado.webp",
    name: "1/2 Pato laqueado con puré de manzana",
    gramaje: "350gr / 12oz",
    price: "$550",
  },
  {
    src: "/imagenes/carta/parrilla/granja/polloOreganato.webp",
    name: "1/2 Pollo al oreganato",
    gramaje: "260gr / 9oz",
    price: "$250",
  },
  {
    src: "/imagenes/carta/parrilla/granja/polloMalazo.webp",
    name: "1/2 pollo Malazzo",
    gramaje: "300gr / 12oz",
    price: "$285",
  },
  {
    src: "/imagenes/carta/parrilla/granja/rack.webp",
    name: "Rack de cordero",
    gramaje: "500gr / 17oz",
    price: "$950",
  },
  {
    src: "/imagenes/carta/parrilla/granja/matambrito.webp",
    name: "Matambrito de cerdo",
    gramaje: "350gr / 12oz",
    price: "$450",
    boton: ".",
  },
];
const postres = [
  {
    src: "/imagenes/carta/postres/helados.webp",
    name: "Helados:",
    description: "Vainilla, Chocolate, Mascarphone, Alfajor, Ferrero.",
    price: "$40",
  },
  {
    src: "/imagenes/carta/postres/flanCasero.webp",
    name: "Flan casero",
    description: "Acompañado con botones de dulce de leche y crema batida.",
    price: "$125",
  },
  {
    src: "/imagenes/carta/postres/alfajor.webp",
    name: "Alfajor de hojaldre",
    description: "Postre tipico Argentino con capas de hojaldre unidas con dulce de leche y nuez troceada.",
    price: "$175",
  },
  {
    src: "/imagenes/carta/postres/martinFierro.webp",
    name: "Martín fierro",
    description: "Helado de vainilla con fresas flameadas",
    price: "$155",
  },
  {
    src: "/imagenes/carta/postres/musse.webp",
    name: " Musse de chocolate",
    description: "Espuma de chocolate semiamargo acompañado con frutos rojos",
    price: "$125",
  },
  {
    src: "/imagenes/carta/postres/crepa.webp",
    name: "Crepa Matera",
    description: "Con mascarpone y salsa de dulce de leche.",
    price: "$165",
  },
  {
    src: "/imagenes/carta/postres/pastelChocolate.webp",
    name: "Patel de chocolate",
    description: "Base de biscocho con nueces y musse de chocolate semiamargo.",
    price: "$115",
  },
  {
    src: "/imagenes/carta/postres/ate.webp",
    name: "Ate con queso",
    description: "Tambien conocido como vigilante, el ate es de camote acompañado con queso gouda y botones de dulce de leche. ",
    price: "$125",
  },

  {
    src: "/imagenes/carta/postres/tartaManzana.webp",
    name: "Tarta de manzana",
    description: "Base de masa sablé, manzana en cubos pequeños, strusel de canela ya compañado con una bola de helado de vainilla.",
    price: "$175",
  },
  {
    src: "/imagenes/carta/postres/camoteRescoldo.webp",
    name: "Camote al rescoldo",
    description: "Cocinado con las cenizas de la parrilla, un poco de strusel, caramelo y un helado de mascarpone.",
    price: "$145",
  },
];
---

<section
  class="landing-section h-full w-screen overflow-hidden"
  data-header-color={color}
  id={id}
>
  <!-- //navegacion sm -->
  <nav id="navegacion-cartaSM" class="md:hidden max-h-full">
    <h1
      class="text-red-700 text-4xl font-semibold flex justify-center items-center mt-8"
    >
      Menú
    </h1>
    <a
      id="botonempanadas"
      class="hover:cursor-pointer mt-6 font-boldes text-4xl text-white flex justify-center"
      >Empanadas</a
    >
    <div
      id="divEmpanadas"
      class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl"
    >
      {
        empanadas.map((empanada) => (
          <div class=" flex flex-col bg-white bg-opacity-15 border-2 border-red-900 rounded-xl m-3 min-w-32  text-white">
            <img
              class="image-drop-shadow-empanadas relative bottom-5 "
              src={empanada.src}
              alt="empanada"
            />
            <p class="font-boldes text-md ml-2 text-pretty opacity-85">
              {empanada.name}
            </p>
            {/* <p class="font-light text-xs ml-2  ">{empanada.description}</p> */}
            <p class="ml-2 mb-1 ">{empanada.price}</p>
          </div>
        ))
      }
      {}
    </div>
    <a
      id="botonEntradas"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-boldes text-4xl"
      >Entradas</a
    >
    <div id="divEntradas" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        entradas.map((entrada) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-900 rounded-xl m-3 min-w-32 text-white  ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl"
              src={entrada.src}
              alt="empanada"
            />
            <p class="font-boldes text-sm text-start mt-3 ml-2">
              {entrada.name}
            </p>
            {/* <p class="font-light text-xs ml-1 mr-1 text-white/75">
              {entrada.description}
            </p> */}
            <p class="ml-2">{entrada.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonEnsaladas"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-boldes text-4xl"
      >Ensaladas</a
    >
    <div id="divEnsaldas" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        ensaladas.map((ensalada) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-900 rounded-xl m-3 min-w-32 text-white   ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={ensalada.src}
              alt="empanada"
            />
            <p class=" flex font-boldes text-sm text-start mt-3 ml-2  ">
              {ensalada.name}
            </p>
            {/* <p class="font-light text-xs ml-1 mr-1 text-white/75 ">
              {ensalada.description}
            </p> */}
            <p class="ml-2">{ensalada.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonPizzas"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-boldes text-4xl"
      >Pizzas</a
    >
    <div id="divPizzas" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        pizzas.map((pizza) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-900 rounded-xl m-3 min-w-32 text-white   ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={pizza.src}
              alt="empanada"
            />
            <p class=" flex font-boldes text-sm text-start mt-3 ml-2  ">
              {pizza.name}
            </p>
            {/* <p class="font-light text-xs ml-1 mr-1 text-white/75">
              {pizza.description}
            </p> */}
            <p class="ml-2">{pizza.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonCocina"
      class="hover:cursor-pointer flex justify-center mt-6 text-white font-boldes text-4xl"
      >Cocina</a
    >
    <div id="divCocina" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        cocina.map((platillo) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-900 rounded-xl m-3 min-w-32 text-white   ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={platillo.src}
              alt="empanada"
            />
            <p class=" flex font-boldes text-sm text-start mt-3 ml-2  ">
              {platillo.name}
            </p>
            {/* <p class="font-light text-xs ml-1 mr-1 text-white/75">
              {platillo.description}
            </p> */}
            <p class="ml-2">{platillo.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonpostres"
      class="hover:cursor-pointer flex justify-center text-white font-boldes text-4xl mt-6"
      >Postres</a
    >
    <div id="divPostres" class="flex overflow-x-auto ml-16 rounded-s-3xl">
      {
        postres.map((postre) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-900 rounded-xl m-3 min-w-32 text-white relative    ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={postre.src}
              alt="empanada"
            />
            <p class=" flex font-boldes text-sm text-start mt-2 ml-2  ">
              {postre.name}
            </p>
            <p class="font-light text-xs ml-2 text-white/75 text-wrap">
              {postre.description}
            </p>
            <p class="ml-2">{postre.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonparrilla"
      class="hover:cursor-pointer flex justify-center text-white mt-8 font-boldes text-4xl"
      >Parrilla</a
    >
    <a
    href="https://cavamatera.online"
    arial-label="cavamatera"
    target="_blank"
    rel="noopener noreferrer"
    class="hover:cursor-pointer flex justify-center text-white mt-7 font-boldes text-4xl"
  >
   Vinos
  </a>

    <!-- modifique la iteracion con map a manual  por manipular los botones con id unicos -->

    <div id="divParrilla" class="w-full justify-center text-white mb-24">
      <ul class="flex justify-center">
        <li class="mb-6">
          <button id="botonGranja" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center"
              src="/imagenes/carta/parrilla/cerdo.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-boldes text-xl">Granja</h2>
          </button>
          <button id="botonCampo" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center"
              src="/imagenes/carta/parrilla/vaca.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-boldes text-xl textred">
              Campo
            </h2>
          </button>
          <button id="botonMar" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center r"
              src="/imagenes/carta/parrilla/camaron.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-boldes text-xl">Mar</h2>
          </button>
        </li>
      </ul>
      <div
        id="divCampo"
        class="grid grid-cols-4 justify-center text-center text-white gap-x-1 m-2"
      >
        {
          campoData.map((item, index) => (
            <div
              id="divCortes"
              class="flex flex-col justify-center items-center col-span-2 mx-auto    "
            >
              <img
                id={item.name}
                class=" size-40 hover:cursor-pointer  "
                src={item.src}
                alt="cortes"
              />

              <h1 class=" text-base font-boldes">{item.name}</h1>
              <p class=" text-[11px]">{item.description}</p>
            </div>
          ))
        }
        <div
          class="justify-center col-span-4 bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-2 text-white"
        >
          <p class="text-xs m-2">
            Los cortes que aquí servimos son de la más alta calidad, por lo
            tanto, no requieren ser sometidos a ningún proceso de marinado o
            suavizado que altere su textura y/o sabor natural.
          </p>
        </div>
      </div>
      <Filetes id="divFiletesSM" />
      <Vacios id="divVaciosSM" />
      <Entraas id="divEntrañasSM" />
      <AsadosDeTira id="divAsadosSM" />
      <RibEye id="divRibEyeSM" />
      <div
        id="divMarsm"
        class="grid grid-cols-2 justify-center text-center text-white rounded-xl p-4 m-2"
      >
        {
          marData.map((item, index) => (
            <div class=" flex justify-center flex-col relative  mx-auto ">
              <img
                id={item.name}
                class="h-32 w-32 object-cover  mx-auto"
                src={item.src}
                alt="mar"
              />
              <p class="mt-2 font-boldes  text-center text-pretty text-sm">
                {item.name}
              </p>
              <p class="mt-1 font-light text-center text-pretty md:text-xs">
                {item.gramaje}
              </p>
              <p class=" mt-1">{item.price}</p>
              {item.boton ? (
              // este pulser tiene una segunda clase agregada usamos typescrit
                <div id="" class=" absolute top-[75px] left-[100px]">
                  {" "}
                  <a
                    id="pulser"
                    href="/pageCalamar"
                    class="bg-white h-3 w-3 rounded-full absolute inset-0"
                  />
                </div>
              ) : null}
            </div>
          ))
        }
      </div>
      <div
        id="divGranjasm"
        class="grid grid-cols-2 justify-center text-center text-white rounded-xl p-4 m-2"
      >
        <!-- -z10 index para que el boton pulser en alguno de estos platillos opueda ser clickeado  -->
        {
          granjaData.map((item, index) => (
            <div class=" flex justify-center flex-col py-3 px-2 relative   m-1">
              <img
                id={item.name}
                class=" h-32 w-32 object-cover mx-auto -z-10 "
                src={item.src}
                alt="granja"
              />

              <p class="mt-2 font-boldes text-sm text-center text-pretty md:text-sm">
                {item.name}
              </p>
              <p class="mt-1 font-light text-center text-pretty text-xs">
                {item.gramaje}
              </p>
              <p class=" mt-1">{item.price}</p>
              {item.boton ? (
              // este pulser tiene una segunda clase agregada usamos typescrit
                <div id="" class=" absolute left-24 top-28">
                  {" "}
                  <a
                    id="pulser"
                    href="/pageMatambrito"
                    class="bg-white h-3 w-3 rounded-full absolute inset-0"
                  />
                </div>
              ) : null}
            </div>
          ))
        }
      </div>
    </div>
  </nav>
</section>

<!-- <NavMD /> -->

<section
  class="landing-section h-full w-screen overflow-hidden"
  data-header-color={color}
  id={id}
>
  <!-- //navegacion md -->
  <nav id="navegacion-cartaMD" class="hidden md:flex flex-col items-center">
    <header class="hidden md:block text-center mt-20 md:mb-12 text-white">
      <h1 class="md:text-5xl xl:text-7xl font-boldes">Menú</h1>
      <h3 class="md:text-4xl xl:text-5xl font-boldes opacity-55">
        Apetito por lo que hacemos
      </h3>
    </header>

    <div
      class="flex justify-center flex-wrap gap-x-6 gap-y-2 p-4 items-center opacity-90"
    >
      <a
        id="botonEmpanadasMD"
        class="hover:cursor-pointer mt-6 font-bold text-3xl text-white flex"
        >Empanadas</a
      >
      <a
        id="botonEntradasMD"
        class="hover:cursor-pointer flex text-white mt-6 font-bold text-3xl"
        >Entradas</a
      >
      <a
        id="botonEnsaladasMD"
        class="hover:cursor-pointer flex text-white mt-6 font-bold text-3xl"
        >Ensaladas</a
      >
      <a
        id="botonPizzasMD"
        class="hover:cursor-pointer flex text-white mt-6 font-bold text-3xl"
        >Pizzas</a
      >

      <a
        id="botonCocinaMD"
        class="hover:cursor-pointer flex mt-6 text-white font-bold text-3xl"
        >Cocina</a
      >
      <a
        id="botonParrillaMD"
        class="hover:cursor-pointer flex text-white mt-6 font-bold text-3xl"
        >Parrilla</a
      >
      <a
        id="botonPostresMD"
        class="hover:cursor-pointer flex text-white mt-6 font-bold text-3xl mt-"
        >Postres</a
      >
    </div>

    <div
      id="divEmpanadasMD"
      class="w-full gap-y-16 md:grid md:grid-cols-4 pt-[90px] pb-[170px] text-white content-center justify-center"
      style=" "
    >
      {
        empanadas.map((empanada) => (
          <CardsComponent
            src={empanada.src}
            name={empanada.name}
            description={empanada.description}
            price={empanada.price}
          />
        ))
      }
    </div>

    <div
      id="divEntradasMD"
      class="w-full gap-y-16 md:grid md:grid-cols-4 p-7 mb-24 text-white/85"
    >
      {
        entradas.map((entrada) => (
          <CardsComponent
            src={entrada.src}
            name={entrada.name}
            description={entrada.description}
            price={entrada.price}
          />
        ))
      }
    </div>

    <div
      id="divEnsaladasMD"
      class="w-full gap-y-12 md:grid md:grid-cols-4 p-7 mb-24 text-white/85"
    >
      {
        ensaladas.map((ensalada) => (
          <CardsComponent
            src={ensalada.src}
            name={ensalada.name}
            description={ensalada.description}
            price={ensalada.price}
          />
        ))
      }
    </div>

    <div
      id="divPizzasMD"
      class="w-full gap-y-16 md:grid md:grid-cols-3 p-7 mb-24 text-white/85"
      style=" "
    >
      {
        pizzas.map((pizza) => (
          <CardsComponent
            src={pizza.src}
            name={pizza.name}
            description={pizza.description}
            price={pizza.price}
          />
        ))
      }
    </div>

    <div
      id="divCocinaMD"
      class="w-full gap-y-16 md:grid md:grid-cols-4 p-7 mb-24 text-white/85"
    >
      {
        cocina.map((cocina) => (
          <CardsComponent
            src={cocina.src}
            name={cocina.name}
            description={cocina.description}
            price={cocina.price}
          />
        ))
      }
    </div>

    <!-- modifique la iteracion con map a manual  por manipular los botones con id unicos -->

    <div id="divParrillaMD" class="w-full justify-center text-white mt-6">
      <ul class="flex justify-center">
        <li class="mb-6">
          <button id="botonGranjaMD" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center"
              src="/imagenes/carta/parrilla/cerdo.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-bold text-xl">Granja</h2>
          </button>
          <button id="botonCampoMD" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center"
              src="/imagenes/carta/parrilla/vaca.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-bold text-xl">Campo</h2>
          </button>
          <button id="botonMarMD" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center r"
              src="/imagenes/carta/parrilla/camaron.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-bold text-xl">Mar</h2>
          </button>
        </li>
      </ul>
      <div
        id="divCampoMD"
        class="grid grid-cols-9 gap-x-4 justify-center text-center text-white mb-10"
      >
        {
          campoData.map((item, index) => (
            <div
              id="divCortes"
              class="flex flex-col justify-center  m-2 col-span-3  "
            >
              <img
                id={item.src}
                class=" size-96 mx-auto hover:cursor-pointer  "
                src={item.src}
                alt="cortes"
              />

              <h1 class=" text-base font-bold">{item.name}</h1>
              <p class=" text-[10px]">{item.description}</p>
            </div>
          ))
        }
        <div
          class="justify-center col-span-9 bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-4 text-white"
        >
          <p class="text-base m-2 p-4">
            Los cortes que aquí servimos son de la más alta calidad, por lo
            tanto, no requieren ser sometidos a ningún proceso de marinado o
            suavizado que altere su textura y/o sabor natural.
          </p>
        </div>
      </div>
      <Filetes id="divFiletesMD" />
      <Vacios id="divVaciosMD" />
      <Entraas id="divEntrañasMD" />
      <AsadosDeTira id="divAsadosMD" />
      <RibEye id="divRibEyeMD" />
      <div
        id="divMarMD"
        class="grid grid-cols-3 justify-center text-center text-white rounded-xl p-4 m-2"
      >
        {
          marData.map((item, index) => (
            <div class=" flex justify-center flex-col mx-auto ">
              <img
                id={item.name}
                class="h-32 w-32 object-cover mx-auto"
                src={item.src}
                alt="mar"
              />
              <p class="mt-2 font-semibold  text-center text-pretty text-sm">
                {item.name}
              </p>
              <p class="mt-1 font-light text-center text-pretty md:text-xs">
                {item.gramaje}
              </p>
              <p class=" mt-1">{item.price}</p>
            </div>
          ))
        }
      </div>
      <div
        id="divGranjaMD"
        class="grid grid-cols-3 justify-center text-center text-white rounded-xl p-4 m-2"
      >
        {
          granjaData.map((item, index) => (
            <div class=" flex justify-center flex-col py-3 px-2 ">
              <img
                id={item.name}
                class=" h-32 w-32 object-cover mx-auto"
                src={item.src}
                alt="granja"
              />
              <p class="mt-2 font-semibold text-sm text-center text-pretty md:text-sm">
                {item.name}
              </p>
              <p class="mt-1 font-light text-center text-pretty text-xs">
                {item.gramaje}
              </p>
              <p class=" mt-1">{item.price}</p>
              {/* {item.boton ? <Pulser class=" absolute  " /> : null} */}
            </div>
          ))
        }
      </div>
    </div>

    <div
      id="divPostresMD"
      class="w-full gap-y-16 md:grid md:grid-cols-4 p-7 mb-24 text-white/85"
    >
      {
        postres.map((postre) => (
          <CardsComponent
            src={postre.src}
            name={postre.name}
            description={postre.description}
            price={postre.price}
          />
        ))
      }
    </div>
  </nav>
</section>

<!-- //script para mostrar y ocultar divs EN TAMAÑO SM -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const empanadas = document.getElementById("botonempanadas");
    const empanadasDiv = document.getElementById("divEmpanadas");
    const entradas = document.getElementById("botonEntradas");
    const entradasDiv = document.getElementById("divEntradas");
    const ensaladas = document.getElementById("botonEnsaladas");
    const ensaladasDiv = document.getElementById("divEnsaldas");
    const pizzas = document.getElementById("botonPizzas");
    const pizzasDiv = document.getElementById("divPizzas");
    const cocina = document.getElementById("botonCocina");
    const cocinaDiv = document.getElementById("divCocina");
    const parrilla = document.getElementById("botonparrilla");
    const parrillaDiv = document.getElementById("divParrilla");
    const postres = document.getElementById("botonpostres");
    const postresDiv = document.getElementById("divPostres");

    const botones = [
      empanadas,
      entradas,
      ensaladas,
      pizzas,
      cocina,
      parrilla,
      postres,
    ];
    const divs = [
      empanadasDiv,
      entradasDiv,
      ensaladasDiv,
      pizzasDiv,
      cocinaDiv,
      parrillaDiv,
      postresDiv,
    ];

    // INDICADOR EN TAMAÑO SM
    function cambioClass(element, classRemove, classAdd) {
      element.classList.remove(classRemove);
      element.classList.add(classAdd);
    }

    function mostrarDiv(botones, divs) {
      botones.forEach((boton, index) => {
        if (boton) {
          boton.addEventListener("click", function () {
            const div = divs[index];
            const divOculto =
              div.classList.contains("ocultar") ||
              !div.classList.contains("mostrar");

            botones.forEach((boton) => {
              if (boton) {
                cambioClass(boton, "text-red-800", "text-white");
              }
            });
            if (divOculto) {
              cambioClass(boton, "text-white", "text-red-800");
              cambioClass(div, "ocultar", "mostrar");
            } else {
              cambioClass(boton, "text-red-800", "text-white");
              cambioClass(div, "mostrar", "ocultar");
            }
          });
        }
      });

      divs.forEach((div) => {
        div.classList.add("ocultar");
      });
    }

    mostrarDiv(botones, divs);
  });
</script>

<!-- ocultar divscarnes, divCampo, si se muestra algun divMarsm o divGranjasm -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const campoData = [
      {
        src: "/imagenes/carta/parrilla/campo/filetes.webp",
        name: "Bife de lomo",
        description: "Cortes suaves totalmente magros",
      },
      {
        src: "/imagenes/carta/parrilla/campo/vacios.webp",
        name: "Vacio",
        description: "Corte jugoso, con marmoleo intermedio y textura firme",
      },
      {
        src: "/imagenes/carta/parrilla/campo/entrana.webp",
        name: "Entraña",
        description:
          "Corte con sabor intenso, se recomienda con piel que le aporta una textura crocante",
      },
      {
        src: "/imagenes/carta/parrilla/campo/asado.webp",
        name: "Asado de tira",
        description:
          "Costillas cortadas transversalmente, abundante marmoleo y mucho sabor",
      },
      {
        src: "/imagenes/carta/parrilla/campo/bifedechorizo.webp",
        name: "Bife de chorizo",
        description: "Muy marmoleados y jugoso, nuestros cortes más suaves.",
      },
      {
        src: "/imagenes/carta/parrilla/campo/tomahak.webp",
        name: "Especiales",
        description: "Nuestros cortes especiales son bajo disponibilidad",
      },
    ];

    const botonCampo = document.getElementById("botonCampo");
    const botonMar = document.getElementById("botonMar");
    const botonGranja = document.getElementById("botonGranja");

    const divCampo = document.getElementById("divCampo");
    const divMar = document.getElementById("divMarsm");
    const divGranja = document.getElementById("divGranjasm");

    const divsCarnes = [
      document.getElementById("divFiletesSM"),
      document.getElementById("divVaciosSM"),
      document.getElementById("divEntrañasSM"),
      document.getElementById("divAsadosSM"),
      document.getElementById("divRibEyeSM"),
    ];
    divsCarnes.forEach((div) => {
      div.style.display = "none";
    });

    const botonesCampo = campoData.map((item) =>
      document.getElementById(item.name)
    );
    const botonesCerrar = document.querySelectorAll("#botonCerrar");

    // ocultamos todos los divs en parrilla usamos setTiemeout para que se vea la animacion
    function ocultarTodos() {
      function cambioClase(element, classRemove, classAdd) {
        element.classList.remove(classRemove);
        element.classList.add(classAdd);
      }
      cambioClase(divCampo, "mostrarParrilla", "ocultarParrilla");
      cambioClase(divMar, "mostrarParrilla", "ocultarParrilla");
      cambioClase(divGranja, "mostrarParrilla", "ocultarParrilla");

      divsCarnes.forEach((div) => {
        cambioClase(div, "mostrarParrilla", "ocultarParrilla");
      });
    }
    function mostrarDiv(div) {
      div.classList.remove("ocultarParrilla");
      div.classList.add("mostrarParrilla");
    }
    ocultarTodos();

    botonCampo.addEventListener("click", () => {
      ocultarTodos();
      mostrarDiv(divCampo);
    });
    botonGranja.addEventListener("click", () => {
      ocultarTodos();
      mostrarDiv(divGranja);
    });
    botonMar.addEventListener("click", () => {
      ocultarTodos();
      mostrarDiv(divMar);
    });

    // ocultando div campo por cada click en alguno de los cortes de carne
    function mostrarDivParrilla(divsCarnes, divCampo, divGranja, divMar) {
      const algunDivVisible = divsCarnes.some((div) =>
        div.classList.contains("mostrarParrilla")
      );

      if (algunDivVisible) {
        divCampo.classList.remove("mostrarParrilla");
        divCampo.classList.add("ocultarParrilla");
        divGranja.classList.remove("mostrarParrilla");
        divGranja.classList.add("ocultarParrilla");
        divMar.classList.remove("mostrarParrilla");
        divMar.classList.add("ocultarParrilla");
      } else {
        // divCampo.classList.remove("ocultarParrilla");
        // divCampo.classList.add("mostrarParrilla");
      }
    }

    function mostrarDivCarnes(botonesCampo, divsCarnes) {
      botonesCampo.forEach((boton, index) => {
        if (boton) {
          boton.addEventListener("click", function () {
            const divCarne = divsCarnes[index];
            // if (divCarne.classList.contains("ocultar")) {
            //   divCarne.classList.remove("ocultar");
            // }
            if (divCarne.classList.contains("ocultarParrilla")) {
              divCarne.classList.remove("ocultarParrilla");
              divCarne.classList.add("mostrarParrilla");
              divCarne.style.display = "grid";
            } else {
              divCarne.classList.remove("mostrarParrilla");
              divCarne.classList.add("ocultarParrilla");
              divCarne.style.display = "none";
            }
            mostrarDivParrilla(divsCarnes, divCampo, divGranja, divMar);
          });
        }
      });
    }
    mostrarDivCarnes(botonesCampo, divsCarnes);

    if (botonesCerrar) {
      botonesCerrar.forEach((boton) => {
        boton.addEventListener("click", function () {
          divsCarnes.forEach((div) => {
            div.classList.remove("mostrar");
            div.style.display = "none";
            div.classList.add("ocultarParrilla");
          });
          divCampo.classList.remove("ocultarParrilla");
          divCampo.classList.add("mostrarParrilla");
        });
      });
    }

    // // indicadores para elementos parrilla
    const botones = [botonCampo, botonMar, botonGranja];
    const divs = [divGranja, divCampo, divMar];

    function cambioClase(elemento, classremove, classadd) {
      elemento.classList.remove(classremove);
      elemento.classList.add(classadd);
    }

    // Inicializar todos los divs con opacity-0 solo una vez, al principio.
    divs.forEach((div) => {
      div.classList.add("opacity-0");
    });

    function indicador(botones, divs) {
      botones.forEach((boton, index) => {
        if (boton) {
          boton.addEventListener("click", () => {
            // Restablecer todos los botones a text-white y todos los divs a opacity-0
            botones.forEach((boton) =>
              cambioClase(boton, "text-red-800", "text-white")
            );
            divs.forEach((div) => cambioClase(div, "opacity-100", "opacity-0"));

            const div = divs[index];
            const divOculto = div.classList.contains("opacity-0 ");

            // Cambiar la clase del botón clickeado y su div correspondiente basado en divOculto
            if (divOculto) {
              cambioClase(boton, "text-white", "text-red-800");
              cambioClase(div, "opacity-0", "opacity-100");
            } else {
              cambioClase(boton, "text-red-800", "text-white");
              cambioClase(div, "opacity-100", "opacity-0");
            }
          });
        }
      });
    }

    indicador(botones, divs);
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const botonEmpanadaMD = document.getElementById("botonEmpanadasMD");
    const divEmpanadaMD = document.getElementById("divEmpanadasMD");
    const botonEntradasMD = document.getElementById("botonEntradasMD");
    const divEntradasMD = document.getElementById("divEntradasMD");
    const botonEnsaladasMD = document.getElementById("botonEnsaladasMD");
    const divEnsaladasMD = document.getElementById("divEnsaladasMD");
    const botonPizzasMD = document.getElementById("botonPizzasMD");
    const divPizzasMD = document.getElementById("divPizzasMD");
    const botonCocinaMD = document.getElementById("botonCocinaMD");
    const divCocinaMD = document.getElementById("divCocinaMD");
    const botonParrillaMD = document.getElementById("botonParrillaMD");
    const divParrillaMD = document.getElementById("divParrillaMD");
    const botonPostresMD = document.getElementById("botonPostresMD");
    const divPostresMD = document.getElementById("divPostresMD");

    const botonesMD = [
      botonEmpanadaMD,
      botonEntradasMD,
      botonEnsaladasMD,
      botonPizzasMD,
      botonCocinaMD,
      botonParrillaMD,
      botonPostresMD,
    ];

    const divsMD = [
      divEmpanadaMD,
      divEntradasMD,
      divEnsaladasMD,
      divPizzasMD,
      divCocinaMD,
      divParrillaMD,
      divPostresMD,
    ];

    function ocultarTodosLosDivs() {
      // disv de menu MD
      divsMD.forEach((div) => {
        if (div) {
          div.classList.remove("mostrarLG");
          div.classList.add("ocultarLG");
        }
      });
    }

    function cambioClassMD(element, classRemove, classAdd) {
      element.classList.remove(classRemove);
      element.classList.add(classAdd);
    }

    function resetearBotones() {
      botonesMD.forEach((boton) => {
        if (boton) {
          cambioClassMD(boton, "text-red-800", "text-white");
        } else if (boton === botonParrillaMD) {
        }
      });
    }

    function mostrarDivMD(botonesMD, divsMD) {
      botonesMD.forEach((boton, index) => {
        if (boton) {
          boton.addEventListener("click", function () {
            ocultarTodosLosDivs();
            resetearBotones();

            const divMD = divsMD[index];
            const divOcultoMD = divMD.classList.contains("ocultarLG");

            if (divOcultoMD) {
              cambioClassMD(boton, "text-white", "text-red-800");
              cambioClassMD(divMD, "ocultarLG", "mostrarLG");
            } else {
              cambioClassMD(boton, "text-red-800", "text-white");
              cambioClassMD(divMD, "mostrarLG", "ocultarLG");
            }
          });
        }
      });
    }

    mostrarDivMD(botonesMD, divsMD);

    // Inicialmente mostrar divEntradasMD y ocultar los demás...
    ocultarTodosLosDivs();
    divEntradasMD.classList.remove("ocultarLG");
    divEntradasMD.classList.add("mostrarLG");
    botonEntradasMD.classList.remove("text-white");
    botonEntradasMD.classList.add("text-red-800");
  });
</script>

<!-- me quede en eset escript que eta copiadio igual al del sistema de sm pero sigue sin funcionar mis divs de parrilla estan ocultos y no responennen a los botones de parrilla -->

<script>
  const campoData = [
    {
      src: "/imagenes/carta/parrilla/campo/mapas/mapaFilete.webp",
      name: "Bife de lomo",
      description: "Cortes suaves totalmente magros",
    },
    {
      src: "/imagenes/carta/parrilla/campo/mapas/mapaVacio.webp",
      name: "Vacio",
      description: "Corte jugoso, con marmoleo intermedio y textura firme",
    },
    {
      src: "/imagenes/carta/parrilla/campo/mapas/mapaEntrana.webp",
      name: "Entraña",
      description:
        "Corte con sabor intenso, se recomienda con piel que le aporta una textura crocante",
    },
    {
      src: "/imagenes/carta/parrilla/campo/mapas/mapaAsado.webp",
      name: "Asado de tira",
      description:
        "Costillas cortadas transversalmente, abundante marmoleo y mucho sabor",
    },
    {
      src: "/imagenes/carta/parrilla/campo/mapas/mapaBife.webp",
      name: "Bife de chorizo",
      description: "Muy marmoleados y jugoso, nuestros cortes más suaves.",
    },
    {
      src: "/imagenes/carta/parrilla/campo/tomahak.webp",
      name: "Especiales",
      description: "Nuestros cortes especiales son bajo disponibilidad",
    },
  ];

  const divsCarnesMD = [
    document.getElementById("divFiletesMD"),
    document.getElementById("divVaciosMD"),
    document.getElementById("divEntrañasMD"),
    document.getElementById("divAsadosMD"),
    document.getElementById("divRibEyeMD"),
  ];

  const botonCampoMD = document.getElementById("botonCampoMD");
  const botonMarMD = document.getElementById("botonMarMD");
  const botonGranjaMD = document.getElementById("botonGranjaMD");

  const divCampoMD = document.getElementById("divCampoMD");
  const divMarMD = document.getElementById("divMarMD");
  const divGranjaMD = document.getElementById("divGranjaMD");

  // usamos otro id en este caso en ves de "name" que ya lo usa el div en SM para que funcionaran los botones de parrilla teniamos que destinar otro ID diferente
  const botonesCampo = campoData.map((item) =>
    document.getElementById(item.src)
  );
  const botonesCerrar = document.querySelectorAll("#botonCerrar");

  function ocultarTodos() {
    function cambioClase(element, classRemove, classAdd) {
      element.classList.remove(classRemove);
      element.classList.add(classAdd);
    }
    cambioClase(divCampoMD, "mostrarParrilla", "ocultarParrilla");
    cambioClase(divMarMD, "mostrarParrilla", "ocultarParrilla");
    cambioClase(divGranjaMD, "mostrarParrilla", "ocultarParrilla");

    divsCarnesMD.forEach((div) => {
      cambioClase(div, "mostrarParrilla", "ocultarParrilla");
    });
  }

  function mostrarDiv(div) {
    div.classList.remove("ocultarParrilla");
    div.classList.add("mostrarParrilla");
  }
  ocultarTodos();

  botonCampoMD.addEventListener("click", () => {
    ocultarTodos();
    mostrarDiv(divCampoMD);
  });
  botonGranjaMD.addEventListener("click", () => {
    ocultarTodos();
    mostrarDiv(divGranjaMD);
  });
  botonMarMD.addEventListener("click", () => {
    ocultarTodos();
    mostrarDiv(divMarMD);
  });

  function mostrarDivParrillaMD(
    divsCarnesMD,
    divCampoMD,
    divGranjaMD,
    divMarMD
  ) {
    const algunDivVisible = divsCarnesMD.some((div) =>
      div.classList.contains("mostrarParrilla")
    );

    if (algunDivVisible) {
      divCampoMD.classList.remove("mostrarParrilla");
      divCampoMD.classList.add("ocultarParrilla");
      divGranjaMD.classList.remove("mostrarParrilla");
      divGranjaMD.classList.add("ocultarParrilla");
      divMarMD.classList.remove("mostrarParrilla");
      divMarMD.classList.add("ocultarParrilla");
    }
  }

  function mostrarDivsCarnesMD(botonesCampo, divsCarnesMD) {
    botonesCampo.forEach((boton, index) => {
      if (boton) {
        boton.addEventListener("click", function () {
          const divCarne = divsCarnesMD[index];
          // if (divCarne.classList.contains("ocultar")) {
          //   divCarne.classList.remove("ocultar");
          // }
          if (divCarne.classList.contains("ocultarParrilla")) {
            divCarne.classList.remove("ocultarParrilla");
            divCarne.classList.add("mostrarParrilla");
            divCarne.style.display = "grid";
          } else {
            divCarne.classList.remove("mostrarParrilla");
            divCarne.classList.add("ocultarParrilla");
            divCarne.style.display = "none";
          }
          mostrarDivParrillaMD(divsCarnesMD, divCampoMD, divGranjaMD, divMarMD);
        });
      }
    });
  }
  mostrarDivsCarnesMD(botonesCampo, divsCarnesMD);

  if (botonesCerrar) {
    botonesCerrar.forEach((boton) => {
      boton.addEventListener("click", function () {
        divsCarnesMD.forEach((div) => {
          div.classList.remove("mostrar");
          div.style.display = "none";
          div.classList.add("ocultarParrilla");
        });
        divCampoMD.classList.remove("ocultarParrilla");
        divCampoMD.classList.add("mostrarParrilla");
      });
    });
  }

  const botones = [botonCampoMD, botonMarMD, botonGranjaMD];
  const divs = [divGranjaMD, divCampoMD, divMarMD];

  function cambioClase(element, classremove, classadd) {
    element.classList.remove(classremove);
    element.classList.add(classadd);
  }

  // Inicializar todos los divs con opacity-0 solo una vez, al principio.
  divs.forEach((div) => {
    div.classList.add("opacity-0");
    if (div === divCampoMD) {
      div.classList.remove("ocultarParrilla");
      div.classList.add("mostrarParrilla");
    }
  });

  function indicador(botones, divs) {
    botones.forEach((boton, index) => {
      if (boton) {
        boton.addEventListener("click", () => {
          // Restablecer todos los botones a text-white y todos los divs a opacity-0
          botones.forEach((boton) =>
            cambioClase(boton, "text-red-800", "text-white")
          );
          divs.forEach((div) => cambioClase(div, "opacity-100", "opacity-0"));

          const div = divs[index];
          const divOculto = div.classList.contains("opacity-0");

          // Cambiar la clase del botón clickeado y su div correspondiente basado en divOculto
          if (divOculto) {
            cambioClase(boton, "text-white", "text-red-800");
            cambioClase(div, "opacity-0", "opacity-100");
          } else {
            cambioClase(boton, "text-red-800", "text-white");
            cambioClase(div, "opacity-100", "opacity-0");
          }
        });
      }
    });
  }

  indicador(botones, divs);
</script>
