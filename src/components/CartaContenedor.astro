---
const { color, title, subtitle, id, showFooterContent } = Astro.props;
const empanadas = [
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Carne",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Carne picante",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Espinaca",
    description: "",
    price: "$60",
  },

  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Humita",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Queso con cebolla",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Roquefort",
    decription: "Fabricado encasa",
    price: "$70",
  },

  {
    src: "/imagenes/carta/empanadaCarne.webp",
    name: "Siciliana",
    description: "",
    price: "$90",
  },
];
const pizzas = [
  {
    src: "/imagenes/empanadas.webp",
    name: "Margarita",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Hongos",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "4 Quesos",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Tomate con anchoas",
    description: "",
    price: "$60",
  },
  {
    src: "/imagenes/carta/pizzaBurrata.webp",
    name: "Jamón con burrata",
    description: " Jamón fabricado en casa",
    price: "$60",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Pancceta y provolone",
    description: "",
    price: "$60",
  },
];
const entradas = [
  {
    src: "/imagenes/empanadas.webp",
    name: "Bocaditos de espinaca",
    description: "",
    price: "$135",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Espárragos al vapor",
    description: "",
    price: "$155",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Pimiento asado",
    description: "",
    price: "$90",
  },

  {
    src: "/imagenes/empanadas.webp",
    name: "Hongos al ajoillo",
    description: "",
    price: "$170",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Berenjenas a la parmesana",
    description: "",
    price: "$185",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Chorizo argentino",
    decription: "Fabricado encasa",
    price: "$110",
  },

  {
    src: "/imagenes/empanadas.webp",
    name: "Chistorra",
    description: "Fabricada en casa",
    price: "$135",
  },
  {
    src: "/imagenes/carta/mollejaParrilla.webp",
    name: "Mollejas a la parrilla",
    description: "",
    price: "$310",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Mollejas al verdeo",
    description: "",
    price: "$290",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Chicnhulines a la parrilla",
    description: "",
    price: "$210",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Malfatti de espinaca",
    description: "",
    price: "$250",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Provoleta tomate y pimiento",
    description: "",
    price: "$220",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "provoleta arugula y jamón serrano ",
    description: "",
    price: "$260",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Tartara de Rib-Eye",
    description: "",
    price: "$250",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Carpaccio de jamón serrano",
    description: "",
    price: "$260",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Mejillones con chistorra",
    description: "",
    price: "$335",
  },
];
const ensaladas = [
  {
    src: "/imagenes/carta/ensaladaVerde.webp",
    name: "Verde",
    description: "",
    price: "$170",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Ensalada de tomate con burrata",
    description: "",
    price: "$280",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Mykonos",
    description: "Tomate, Kalamatas, pepino, pimiento, queso feta",
    price: "$180",
  },
  {
    src: "/imagenes/carta/corazones.webp",
    name: "Corazones de lechuga asados",
    description: "",
    price: "$210",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Arúgula",
    description: "ajo, limón",
    price: "$150",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Arugula",
    description: "lajas de grana padano, tomates cherry",
    price: "$170",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Palmito con alcahofa",
    description: "",
    price: "$150",
  },
];
const cocina = [
  {
    src: "/imagenes/empanadas.webp",
    name: "Fettuccine Bolognesa",
    description: "",
    price: "$230",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: " Fettuccine con crema de hongos",
    description: "",
    price: "$195",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Fetucciine negro con calamares en su tinta",
    description: "",
    price: "$275",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Ravioles de espianaca al pomodoro",
    description: "",
    price: "$230",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Farroto: vegetales y grana padano",
    description: "",
    price: "$210",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Sorrentinos de ricota con salsa rosa",
    description: "",
    price: "$250",
  },
  {
    src: "/imagenes/carta/lasagna.webp",
    name: "Lasagna bolognesa",
    description: "",
    price: "$250",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Hamburguesa al estilo de la matera",
    description: "",
    price: "$250",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Milanesa de pollo",
    description: "",
    price: "$220",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Milanesa de res",
    description: "",
    price: "$320",
  },
];
const parrilla = [
  {
    type: "Granja",
    src: "/imagenes/carta/parrilla/cerdo.webp",
  },
  {
    type: "Campo",
    src: "/imagenes/carta/parrilla/vaca.webp",
  },
  {
    type: "Mar",
    src: " /imagenes/carta/parrilla/camaron.webp",
  },
];
const campoData = [
  {
    src: "/imagenes/carta/parrilla/campo/filetes.webp",
    name: "Bife de lomo",
    description: "Cortes suabes totalmente magros ",
  },
  {
    src: "/imagenes/carta/parrilla/campo/vacios.webp",
    name: "Vacio",
    description: "Corte jugoso, con marmoleo intermedio y textura firme",
  },
  {
    src: "/imagenes/carta/parrilla/campo/entrana.webp",
    name: "Entraña",
    description:
      " Corte con sabor intenso, se recomeinda con piel que le aporta una textura crocante",
  },
  {
    src: "/imagenes/carta/parrilla/campo/asado.webp",
    name: "Asado de tira",
    description:
      "Costillas cortadas transversalmente, abundante marmoleo y mucho sabor",
  },
  {
    src: "/imagenes/carta/parrilla/campo/bifedechorizo.webp",
    name: "Bife de chorizo",
    description: " Muy marmoleados y jugoso, nuestros cortes mas suabes.",
  },
  {
    src: "/imagenes/carta/parrilla/campo/tomahak.webp",
    name: "Easpeciales",
    description: "Nuestros cortes especiales son bajo desiponibilidad",
  },
  // Más objetos aquí si es necesario
];
const filetes = [
  {
    name: "Lomito",
    size: "300gr / 11oz",
    price: "$338",
  },
  {
    name: "Bife de lomo",
    size: "400gr / 14oz",
    price: "$450",
  },
  {
    name: "Bife de lomo en caña",
    size: "800gr / 28oz",
    price: "$900",
  },
  {
    name: "Bife de lomo en caña",
    size: "1,200gr / 42oz",
    price: "$1350",
  },
];
const vacios = [
  {
    name: "Vacío",
    size: "400gr / 14oz",
    price: "$500",
  },
  {
    name: "Vacío",
    size: "650rg / 23oz",
    price: "$830",
  },
  {
    name: "Vacío",
    size: "1,300gr / 46oz",
    price: "$1650",
  },
];
const entrañas = [
  {
    name: "Entraña",
    size: "500gr / 18oz",
    price: "$ 670",
  },
  {
    name: "Entraña",
    size: "850gr / 30oz",
    price: "$1100",
  },
];
const asados = [
  {
    name: "Asado de tira",
    size: "350gr / 12.3oz",
    price: "$ 470",
  },
  {
    name: "Asado completo (pedido especial)",
    size: "3,400gr / 120oz",
    price: "$1100",
  },
];

const postres = [
  {
    src: "/imagenes/empanadas.webp",
    name: "Helados:",
    description: "Vainilla, Chocolate, Mascarphone, Alfajor, Ferrero.",
    price: "$40",
  },
  {
    src: "/imagenes/carta/flanCasero.webp",
    name: "Flan casero",
    description: "",
    price: "$125",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Alfajor de hojaldre",
    description: "",
    price: "$175",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Martín fierro",
    description: "Helado de vainilla con fresas flameadas",
    price: "$150",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: " Musse de chocolate",
    description: "",
    price: "$125",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Crepa Matera",
    description: "con mascarpone y salsa de dulce de leche",
    price: "$165",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Patel de chocolate",
    description: "",
    price: "$115",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Ate con queso",
    description: "",
    price: "$125",
  },

  {
    src: "/imagenes/empanadas.webp",
    name: "Tarta de manzana",
    description: "",
    price: "$150",
  },
  {
    src: "/imagenes/empanadas.webp",
    name: "Camote al rescoldo",
    description: "",
    price: "$145",
  },
];

const imgCarne = campoData.map((item) => ({
  src: item.src,
  name: item.name,
  description: item.description,
}));
---

<section
  class="landing-section h-full mb-28 w-screen overflow-hidden"
  data-header-color={color}
  id={id}
>
  <!-- //navegacion sm -->
  <nav class="md:hidden max-h-full mt-28">
    <h1
      class="text-red-600 text-2xl font-semibold flex justify-center items-center"
    >
      Menú
    </h1>
    <a
      id="botonempanadas"
      class="hover:cursor-pointer mt-8 font-bold text-4xl text-white flex justify-center"
      >Empanadas</a
    >
    <div
      id="divEmpanadas"
      class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl"
    >
      {
        empanadas.map((empanada) => (
          <div class=" flex flex-col bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-3 min-w-32  text-white">
            <img
              class="image-drop-shadow-empanadas relative bottom-5 "
              src={empanada.src}
              alt="empanada"
            />
            <p class="font-bold text-md ml-2 text-pretty">{empanada.name}</p>
            <p class="font-light text-xs ml-2  ">{empanada.description}</p>
            <p class="ml-2 mb-1 ">{empanada.price}</p>
          </div>
        ))
      }
      {}
    </div>
    <a
      id="botonEntradas"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-bold text-4xl"
      >Entradas</a
    >
    <div id="divEntradas" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        entradas.map((entrada) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-3 min-w-32 text-white  ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl"
              src={entrada.src}
              alt="empanada"
            />
            <p class="font-semibold text-sm text-start mt-3 ml-2">
              {entrada.name}
            </p>
            <p class="font-light text-xs ml-1 mr-1 text-white/75">
              {entrada.description}
            </p>
            <p class="ml-2">{entrada.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonEnsaladas"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-bold text-4xl"
      >Ensaladas</a
    >
    <div id="divEnsaldas" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        ensaladas.map((ensalada) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-3 min-w-32 text-white   ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={ensalada.src}
              alt="empanada"
            />
            <p class=" flex font-semibold text-sm text-start mt-3 ml-2  ">
              {ensalada.name}
            </p>
            <p class="font-light text-xs ml-1 mr-1 text-white/75 ">
              {ensalada.description}
            </p>
            <p class="ml-2">{ensalada.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonPizzas"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-bold text-4xl"
      >Pizzas</a
    >
    <div id="divPizzas" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        pizzas.map((pizza) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-3 min-w-32 text-white   ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={pizza.src}
              alt="empanada"
            />
            <p class=" flex font-semibold text-sm text-start mt-3 ml-2  ">
              {pizza.name}
            </p>
            <p class="font-light text-xs ml-1 mr-1 text-white/75">
              {pizza.description}
            </p>
            <p class="ml-2">{pizza.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonCocina"
      class="hover:cursor-pointer flex justify-center mt-6 text-white font-bold text-4xl"
      >Cocina</a
    >
    <div id="divCocina" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
      {
        cocina.map((platillo) => (
          <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-3 min-w-32 text-white   ">
            <img
              class="image-drop-shadow relative left-4 rounded-2xl "
              src={platillo.src}
              alt="empanada"
            />
            <p class=" flex font-semibold text-sm text-start mt-3 ml-2  ">
              {platillo.name}
            </p>
            <p class="font-light text-xs ml-1 mr-1 text-white/75">
              {platillo.description}
            </p>
            <p class="ml-2">{platillo.price}</p>
          </div>
        ))
      }
    </div>
    <a
      id="botonparrilla"
      class="hover:cursor-pointer flex justify-center text-white mt-6 font-bold text-4xl"
      >Parrilla</a
    >

    <div id="divParrilla" class="flex mt-2 w-full justify-center text-white">
      <ul class="flex justify-center">
        <li class="">
          <button id="botonGranja" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center"
              src="/imagenes/carta/parrilla/cerdo.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-bold text-xl">Granja</h2>
          </button>
          <button id="botonCampo" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center"
              src="/imagenes/carta/parrilla/vaca.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-bold text-xl">Campo</h2>
          </button>
          <button id="botonMar" class="hover:cursor-pointe">
            <img
              class="size-28 p-2 flex justify-center r"
              src="/imagenes/carta/parrilla/camaron.webp"
              alt=" imagen"
            />
            <h2 class="flex justify-center font-bold text-xl">Mar</h2>
          </button>
        </li>
      </ul>
    </div>

    <div
      id="divCampo"
      class="grid grid-cols-3 justify-center text-center text-white m-2"
    >
      {
        campoData.map((item, index) => (
          <div id="divCortes" class="flex flex-col justify-center  m-2  ">
            <img
              id={item.name}
              class=" size-32 mx-auto hover:cursor-pointer  "
              src={item.src}
              alt="cortes"
            />

            <h1 class=" text-base font-bold">{item.name}</h1>
            <p class=" text-[10px]">{item.description}</p>
          </div>
        ))
      }
      <div
        class="justify-center col-span-3 bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-2 text-white"
      >
        <p class="text-xs m-2">
          Los cortes que aquí servimos son de la más alta calidad, por lo tanto,
          no requieren ser sometidos a ningún proceso de marinado o suavizado
          que altere su textura y/o sabor natural.
        </p>
      </div>
    </div>
    <div
      id="divFiletes"
      class="border-[2px] border-[#B56C09] bg-black/70 backdrop-blur-sm text-sm rounded-xl text-white content-cente m-1 "
    >
      <div class="flex items-center mx-6 mt-3">
        <h1 class="opacity-0 flex">........</h1>

        <h1
          class="text-white font-bold text-xl flex w-full justify-center opacity-80"
        >
        Filetes
        </h1>
        <button
          id="botonCerrar"
          type="button"
          class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-[#B56C09] dark:hover:text-white"
          data-modal-hide="top-left-modal"
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
          </svg>
        </button>
      </div>
      <div id="" class="flex flex-col justify-center items-center">
        <img
          class="size-28 mx-auto"
          src={imgCarne[0].src}
          alt={imgCarne[0].name}
        />
        <p class="text-sm mb-4 top-0 w-[280px] text-center text-wrap">
          {imgCarne[0].description}
        </p>
      </div>
      <div class="flex m-4 justify-center gap-8">
        {
          filetes.map((filete) => (
            <div class="justify-between flex flex-col text-sm leading-none items-center text-center">
              <p class="font-bold text-wrap">{filete.name}</p>
              <p class="text-sm opacity-50">{filete.size}</p>
              <p class="font-light">{filete.price}</p>
            </div>
          ))
        }
      </div>
    </div>

    <div
      id="divVacios"
      class="border-[2px] border-[#B56C09] bg-black/70 backdrop-blur-sm text-sm rounded-xl text-white content-center m-1"
    >
      <div class="flex items-center mx-6 mt-3">
        <h1 class="opacity-0 flex">........</h1>

        <h1
          class="text-white font-bold text-xl flex w-full justify-center opacity-80"
        >
          Vacios
        </h1>
        <button
          id="botonCerrar"
          type="button"
          class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-[#B56C09] dark:hover:text-white"
          data-modal-hide="top-left-modal"
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
          </svg>
        </button>
      </div>
      <div id="" class="flex flex-col justify-center items-center">
        <img
          class="size-28 mx-auto"
          src={imgCarne[1].src}
          alt={imgCarne[1].name}
        />
        <p class="text-sm mb-4 top-0 w-[280px] text-center text-wrap">
          {imgCarne[1].description}
        </p>
      </div>
      <div class="flex m-4 justify-center gap-8">
        {
          vacios.map((vacio) => (
            <div class="justify-between flex flex-col text-sm leading-none items-center">
              <p class="font-bold">{vacio.name}</p>
              <p class="text-sm opacity-50">{vacio.size}</p>
              <p class="font-light">{vacio.price}</p>
            </div>
          ))
        }
      </div>
    </div>
    <div
      id="divEntrañas"
      class="border-[2px] border-[#B56C09] bg-black/70 backdrop-blur-sm text-sm rounded-xl text-white content-center m-1"
    >
      <div class="flex items-center mx-6 mt-3">
        <h1 class="opacity-0 flex">........</h1>

        <h1
          class="text-white font-bold text-xl flex w-full justify-center opacity-80"
        >
          Entrañas
        </h1>
        <button
          id="botonCerrar"
          type="button"
          class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center dark:hover:bg-[#B56C09] dark:hover:text-white"
          data-modal-hide="top-left-modal"
        >
          <svg
            class="w-3 h-3"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 14"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"></path>
          </svg>
        </button>
      </div>
      <div id="" class="flex flex-col justify-center items-center">
        <img
          class="size-28 mx-auto"
          src={imgCarne[2].src}
          alt={imgCarne[2].name}
        />
        <p class="text-sm mb-4 top-0 w-[280px] text-center">
          {imgCarne[2].description}
        </p>
      </div>
      <div class="flex m-4 justify-center gap-8">
        {
          entrañas.map((entrana) => (
            <div class="justify-between flex flex-col text-sm leading-none items-center">
              <p class="font-bold">{entrana.name}</p>
              <p class="text-sm opacity-50">{entrana.size}</p>
              <p class="font-light">{entrana.price}</p>
            </div>
          ))
        }
      </div>
    </div>
  </nav>
  <a
    id="botonpostres"
    class="hover:cursor-pointer flex justify-center text-white mt-6 font-bold text-4xl"
    >Postres</a
  >
  <div id="divPostres" class="flex overflow-x-auto ml-16 mt-2 rounded-s-3xl">
    {
      postres.map((postre) => (
        <div class="flex flex-col bg-white bg-opacity-15 border-2 border-red-600 rounded-xl m-3 min-w-32 text-white relative    ">
          <img
            class="image-drop-shadow relative left-4 rounded-2xl "
            src={postre.src}
            alt="empanada"
          />
          <p class=" flex font-semibold text-sm text-start mt-2 ml-2  ">
            {postre.name}
          </p>
          <p class="font-light text-xs ml-2 text-white/75 text-wrap">
            {postre.description}
          </p>
          <p class="ml-2">{postre.price}</p>
        </div>
      ))
    }
  </div>

  <!-- // navegacion media  -->
  <header
    class="hidden md:block text-center mt-28 text-4xl lg:text-6xl md:mb-6"
  >
    <a class="xl:text-8xl font-semibold">Menú</a>
    <h3 class="xl:text-5xl font-medium">Apetito por lo que hacemos</h3>
  </header>

  <ul
    id="navegacion-carta"
    class="hidden md:flex flex py-5 mx-auto [&>li>a]:px-3 justify-center md:[&>li>a]:text-nowrap lg:[&>li>a]:px-3 lg:[&>li>a]:text-2xl xl:[&>li>a]:text-3xl lg:flex sticky top-auto"
  >
    <li class="sm:hidden md:block">
      <a
        id="ver-empanadas"
        class="font-semibold text-white text-sm hover:text-red-500">Empanadas</a
      >
      <a
        id="ver-entradas"
        class="font-semibold text-white text-sm hover:text-red-500">Entradas</a
      >
      <a
        id="ver-ensaladas"
        class="font-semibold text-white text-sm hover:text-red-500">Ensaladas</a
      >
      <a
        id="ver-pizzas"
        class="font-semibold text-white text-sm hover:text-red-500">Pizzas</a
      >
      <a
        id="ver-cocina"
        class="font-semibold text-white text-sm hover:text-red-500"
        >Nuestra cocina</a
      >
      <a
        id="ver-parrilla"
        class="font-semibold text-white text-sm hover:text-red-500">Parrilla</a
      >
      <a
        id="ver-postres"
        class="font-semibold text-white text-sm hover:text-red-500">Postres</a
      >
    </li>
  </ul>
  <div
    id="Empanadas"
    class="hidden justify-center justify-between mr-10 ml-10 p-7"
    style=" "
  >
    {
      empanadas.map((empanada) => (
        <div class="flex flex-col items-center sm:hidden md:flex">
          <img
            class="image-drop-shadow-empanadas h-32 w-32 object-cover "
            src={empanada.src}
            alt="empanada"
          />
          <p class=" font-semibold text-base text-center text-pretty">
            {empanada.name}
          </p>
          <p class=" font-light">{empanada.description}</p>
          <p>{empanada.price}</p>
        </div>
      ))
    }
  </div>
  <div
    id="Entradas"
    class="flex hidden md:flex flex-wrap md:mr-10 md:ml-10 p-7"
  >
    {
      entradas.map((entrada) => (
        <div class="h-[270px]pt-7 w-1/4  flex flex-col  items-center lg:w-1/6 sm:hidden md:flex  ">
          <img
            class=" h-32 w-32 object-cover rounded-lg"
            src={entrada.src}
            alt="entrada"
          />
          <p class=" mt-2 font-semibold text-base text-center text-pretty md:text-sm">
            {entrada.name}
          </p>
          <p class=" font-light text-center text-pretty">
            {entrada.description}
          </p>
          <p class="mb-1">{entrada.price}</p>
        </div>
      ))
    }
  </div>
  <div id="Ensaladas" class="hidden flex flex-wrap mr-10 ml-10 p-7">
    {
      ensaladas.map((ensalada) => (
        <div class="h-[270px] w-1/5 flex flex-col  items-center sm:hidden md:flex">
          <img
            class="h-32 w-32 object-cover "
            src={ensalada.src}
            alt="ensalada"
          />
          <p class=" mt-2 font-semibold text-base text-center text-pretty md:text-sm">
            {ensalada.name}
          </p>
          <p class=" mt-1 font-light text-center text-pretty md:text-xs">
            {ensalada.description}
          </p>
          <p class=" mt-1">{ensalada.price}</p>
        </div>
      ))
    }
  </div>
  <div
    id="Pizzas"
    class="hidden flex justify-center justify-between mr-10 ml-10 p-7"
    style=" "
  >
    {
      pizzas.map((pizza) => (
        <div class=" h-[270px] w-1/5 flex flex-col  items-center sm:hidden md:flex  ">
          <img
            class=" h-24 w-24 lg:h-32 lg:w-32 object-cover "
            src={pizza.src}
            alt="pizza"
          />
          <p class="  mt-2 font-semibold text-base text-center text-pretty md:text-sm">
            {pizza.name}
          </p>
          <p class=" mt-1 font-light text-center text-pretty md:text-xs">
            {pizza.description}
          </p>
          <p class="mt-1">{pizza.price}</p>
        </div>
      ))
    }
  </div>
  <!-- //totalmente responsive no tocar clase de cc en el layout -->

  <div id="Cocina" class="hidden flex flex-wrap mr-10 ml-10 p-7">
    {
      cocina.map((cocina) => (
        <div class="h-[270px] w-1/5 flex flex-col  items-center sm:hidden md:flex">
          <img class="h-32 w-32 object-cover " src={cocina.src} alt="cocina" />
          <p class=" mt-2 font-semibold text-base text-center text-pretty md:text-sm">
            {cocina.name}
          </p>
          <p class="  mt-1 font-light text-center text-pretty md:text-xs">
            {cocina.description}
          </p>
          <p class="mt-1">{cocina.price}</p>
        </div>
      ))
    }
  </div>
  <div
    id="Postres"
    class="hidden flex flex-wrap justify-between mr-10 ml-10 p-7"
  >
    {
      postres.map((postre) => (
        <div class="h-[270px] w-1/5 flex flex-col  items-center sm:hidden md:flex ">
          <img class="h-32 w-32 object-cover  " src={postre.src} alt="postre" />
          <p class=" mt-2 font-semibold text-base text-center text-pretty md:text-sm">
            {postre.name}
          </p>
          <p class=" mt-1 font-light text-center text-pretty md:text-xs">
            {postre.description}
          </p>
          <p class="mt-1">{postre.price}</p>
        </div>
      ))
    }
  </div>

  <!-- //script para mostrar y ver menu en TAMAÑO MD -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const menu = {
        empanadas: document.getElementById("Empanadas"),
        pizzas: document.getElementById("Pizzas"),
        entradas: document.getElementById("Entradas"),
        ensaladas: document.getElementById("Ensaladas"),
        cocina: document.getElementById("Cocina"),
        parrilla: document.getElementById("Parrilla"),
        postres: document.getElementById("Postres"),
      };

      function mostrarDiv(name) {
        Object.keys(menu).forEach((key) => {
          if (menu[key] !== null && menu[key] !== undefined) {
            if (key === name) {
              menu[key].style.opacity = "1";
              menu[key].style.display = "flex"; // Muestra el div seleccionado.
            } else {
              // Agrega una transición de 0.5 segundos a la propiedad de opacidad.
              menu[key].style.opacity = "0";
              menu[key].style.display = "none";
            }
          }
        });
      }

      // Event listeners para los botones o enlaces
      document
        .getElementById("ver-empanadas")
        .addEventListener("click", function () {
          mostrarDiv("empanadas");
        });
      document
        .getElementById("ver-pizzas")
        .addEventListener("click", function () {
          mostrarDiv("pizzas");
        });
      document
        .getElementById("ver-entradas")
        .addEventListener("click", function () {
          mostrarDiv("entradas");
        });
      document
        .getElementById("ver-ensaladas")
        .addEventListener("click", function () {
          mostrarDiv("ensaladas");
        });
      document
        .getElementById("ver-cocina")
        .addEventListener("click", function () {
          mostrarDiv("cocina");
        });
      document
        .getElementById("ver-parrilla")
        .addEventListener("click", function () {
          mostrarDiv("parrilla");
        });

      document
        .getElementById("ver-postres")
        .addEventListener("click", function () {
          mostrarDiv("postres");
        });
    });
  </script>

  <!-- //script para mostrar y ocultar divs EN TAMAÑO SM -->
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const campoData = [
        {
          src: "/imagenes/carta/parrilla/campo/filetes.webp",
          name: "Bife de lomo",
          description: "Cortes suabes totalmente magros ",
        },
        {
          src: "/imagenes/carta/parrilla/campo/vacios.webp",
          name: "Vacio",
          description: "Corte jugoso, con marmoleo intermedio y textura firme",
        },
        {
          src: "/imagenes/carta/parrilla/campo/entrana.webp",
          name: "Entraña",
          description:
            " Corte con sabor intenso, se recomeinda con piel que le aporta una textura crocante",
        },
        {
          src: "/imagenes/carta/parrilla/campo/asado.webp",
          name: "Asado de tira",
          description:
            "Costillas cortadas transversalmente, abundante marmoleo y mucho sabor",
        },
        {
          src: "/imagenes/carta/parrilla/campo/bifedechorizo.webp",
          name: "Bife de chorizo",
          description: " Muy marmoleados y jugoso, nuestros cortes mas suabes.",
        },
        {
          src: "/imagenes/carta/parrilla/campo/tomahak.webp",
          name: "Easpeciales",
          description: "Nuestros cortes especiales son bajo desiponibilidad",
        },
        // Más objetos aquí si es necesario
      ];
      const campoDatos = [...campoData];

      const empanadas = document.getElementById("botonempanadas");
      const empanadasDiv = document.getElementById("divEmpanadas");
      const entradas = document.getElementById("botonEntradas");
      const entradasDiv = document.getElementById("divEntradas");
      const ensaladas = document.getElementById("botonEnsaladas");
      const ensaladasDiv = document.getElementById("divEnsaldas");
      const pizzas = document.getElementById("botonPizzas");
      const pizzasDiv = document.getElementById("divPizzas");
      const cocina = document.getElementById("botonCocina");
      const cocinaDiv = document.getElementById("divCocina");
      const parrilla = document.getElementById("botonparrilla");
      const parrillaDiv = document.getElementById("divParrilla");
      const postres = document.getElementById("botonpostres");
      const postresDiv = document.getElementById("divPostres");
      const campo = document.getElementById("botonCampo");
      const campoDiv = document.getElementById("divCampo");
      // const botonesCampo = campoDatos.map((item) =>
      //   document.getElementById(`${item.name}`)
      // );

      // const filetesDiv = document.getElementById("divFiletes");
      // const vaciosDiv = document.getElementById("divVacios");
      // const entrañasDiv = document.getElementById("divEntrañas");

      const botones = [
        empanadas,
        entradas,
        ensaladas,
        pizzas,
        cocina,
        parrilla,
        postres,
        campo,
      ];
      const divs = [
        empanadasDiv,
        entradasDiv,
        ensaladasDiv,
        pizzasDiv,
        cocinaDiv,
        parrillaDiv,
        postresDiv,
        campoDiv,
      ];

      function mostrarDiv(botones, divs) {
        botones.forEach((boton, index) => {
          // Verificar si el botón existe antes de agregar el evento
          if (boton) {
            boton.addEventListener("click", function () {
              const div = divs[index];
              if (
                div.classList.contains("ocultar") ||
                !div.classList.contains("mostrar")
              ) {
                div.classList.remove("ocultar");
                div.classList.add("mostrar");
              } else {
                div.classList.remove("mostrar");
                div.classList.add("ocultar");
              }
            });
          }
        });

        divs.forEach((div) => {
          div.classList.add("ocultar");
        });
      }

      mostrarDiv(botones, divs);
    });
  </script>
</section>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const campoData = [
      {
        src: "/imagenes/carta/parrilla/campo/filetes.webp",
        name: "Bife de lomo",
        description: "Cortes suaves totalmente magros",
      },
      {
        src: "/imagenes/carta/parrilla/campo/vacios.webp",
        name: "Vacio",
        description: "Corte jugoso, con marmoleo intermedio y textura firme",
      },
      {
        src: "/imagenes/carta/parrilla/campo/entrana.webp",
        name: "Entraña",
        description:
          "Corte con sabor intenso, se recomienda con piel que le aporta una textura crocante",
      },
      {
        src: "/imagenes/carta/parrilla/campo/asado.webp",
        name: "Asado de tira",
        description:
          "Costillas cortadas transversalmente, abundante marmoleo y mucho sabor",
      },
      {
        src: "/imagenes/carta/parrilla/campo/bifedechorizo.webp",
        name: "Bife de chorizo",
        description: "Muy marmoleados y jugoso, nuestros cortes más suaves.",
      },
      {
        src: "/imagenes/carta/parrilla/campo/tomahak.webp",
        name: "Especiales",
        description: "Nuestros cortes especiales son bajo disponibilidad",
      },
    ];

    const botonesCampo = campoData.map((item) =>
      document.getElementById(item.name)
    );

    const divsCarnes = [
      document.getElementById("divFiletes"),
      document.getElementById("divVacios"),
      document.getElementById("divEntrañas"),
    ];

    const campoDiv = document.getElementById("divCampo");

    const botonesCerrar = document.querySelectorAll("#botonCerrar");
    //comit

    if (botonesCerrar) {
      botonesCerrar.forEach((boton) => {
        boton.addEventListener("click", function () {
          divsCarnes.forEach((div) => {
            div.classList.remove("mostrar");
            div.classList.add("ocultar");
          });
          campoDiv.classList.remove("ocultar");
          campoDiv.classList.add("mostrar");
        });
      });
    }

    // Ocultar los divs inicialmenteo
    divsCarnes.forEach((div) => {
       div.classList.add("ocultar");
     });

    function mostrarDivCarnes(botonesCampo, divsCarnes) {
      botonesCampo.forEach((boton, index) => {
        if (boton) {
          boton.addEventListener("click", function () {
            const divCarne = divsCarnes[index];
            if (divCarne.classList.contains("ocultar")) {
              divCarne.classList.remove("ocultar");
              divCarne.classList.add("mostrar");
            } else {
              divCarne.classList.remove("mostrar");
              divCarne.classList.add("ocultar");
            }
            ocultarCampoDiv(divsCarnes, campoDiv);
          });
        }
      });
    }

    function ocultarCampoDiv(divsCarnes, campoDiv) {
      const algunDivVisible = divsCarnes.some((div) =>
        div.classList.contains("mostrar")
      );
      if (algunDivVisible) {
        campoDiv.classList.remove("mostrar");
        campoDiv.classList.add("ocultar");
      } else {
        campoDiv.classList.remove("ocultar");
        campoDiv.classList.add("mostrar");
      }
    }

    mostrarDivCarnes(botonesCampo, divsCarnes);
  });
</script>
